{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LibraryService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/bibliotecas'; // Ajusta la URL de tu backend\n  }\n\n  getAllLibraries() {\n    const url = `${this.apiUrl}/getAll`;\n    return this.http.get(url);\n  }\n  createLibrary(library) {\n    const url = `${this.apiUrl}/create`;\n    return this.http.post(url, library);\n  }\n  static #_ = this.ɵfac = function LibraryService_Factory(t) {\n    return new (t || LibraryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibraryService,\n    factory: LibraryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LibraryService","constructor","http","apiUrl","getAllLibraries","url","get","createLibrary","library","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\LykerX\\Desktop\\Desarrollo Web\\Parcial\\front\\src\\app\\services\\library.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Library } from '../types/library';\r\n\r\nimport { forwardRef } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LibraryService {\r\n  private apiUrl = 'http://localhost:8080/api/bibliotecas'; // Ajusta la URL de tu backend\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllLibraries(): Observable<Library[]> {\r\n    const url = `${this.apiUrl}/getAll`;\r\n    return this.http.get<Library[]>(url);\r\n  }\r\n\r\n  createLibrary(library: Library): Observable<Library> {\r\n    const url = `${this.apiUrl}/create`;\r\n    return this.http.post<Library>(url, library);\r\n  }\r\n\r\n  // Agrega más métodos según sea necesario, como getLibraryById, updateLibrary, deleteLibrary, etc.\r\n}\r\n"],"mappings":";;AAUA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uCAAuC,CAAC,CAAC;EAEnB;;EAEvCC,eAAeA,CAAA;IACb,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACtC;EAEAE,aAAaA,CAACC,OAAgB;IAC5B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAAUJ,GAAG,EAAEG,OAAO,CAAC;EAC9C;EAAC,QAAAE,CAAA,G;qBAbUV,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}